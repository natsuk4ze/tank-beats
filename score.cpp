//=============================================================================
//
// ÔøΩXÔøΩRÔøΩAÔøΩÔøΩÔøΩÔøΩ [score.cpp]
// Author : natsuk4ze
//
//=============================================================================
#include "score.h"

//*****************************************************************************
// ÔøΩ}ÔøΩNÔøΩÔøΩÔøΩÔøΩ`
//*****************************************************************************
#define	TEXTURE_SCORE		"data/TEXTURE/number000.png"	// ÔøΩ«Ç›çÔøΩÔøΩﬁÉeÔøΩNÔøΩXÔøΩ`ÔøΩÔøΩÔøΩtÔøΩ@ÔøΩCÔøΩÔøΩÔøΩÔøΩ
#define	TEXTURE_FRAME_SCORE	"data/TEXTURE/frame_score.png"	// ÔøΩ«Ç›çÔøΩÔøΩﬁÉeÔøΩNÔøΩXÔøΩ`ÔøΩÔøΩÔøΩtÔøΩ@ÔøΩCÔøΩÔøΩÔøΩÔøΩ
#define	SCORE_SIZE_X		(35.0f)							// ÔøΩXÔøΩRÔøΩAÔøΩÃêÔøΩÔøΩÔøΩÔøΩÃïÔøΩ
#define	SCORE_SIZE_Y		(50.0f)							// ÔøΩXÔøΩRÔøΩAÔøΩÃêÔøΩÔøΩÔøΩÔøΩÃçÔøΩÔøΩÔøΩ
#define	SCORE_INTERVAL_X	(0.0f)							// ÔøΩXÔøΩRÔøΩAÔøΩÃêÔøΩÔøΩÔøΩÔøΩÃï\ÔøΩÔøΩÔøΩ‘äu

#define	NUM_PLACE			(8)								// ÔøΩXÔøΩRÔøΩAÔøΩÃåÔøΩÔøΩÔøΩ

#define	SCORE_POS_X			(SCREEN_WIDTH - (SCORE_INTERVAL_X + SCORE_SIZE_X) * NUM_PLACE - 20.0f)	// ÔøΩXÔøΩRÔøΩAÔøΩÃï\ÔøΩÔøΩÔøΩÓèÄÔøΩ íuÔøΩwÔøΩÔøΩÔøΩW
#define	SCORE_POS_Y			(25.0f)																	// ÔøΩXÔøΩRÔøΩAÔøΩÃï\ÔøΩÔøΩÔøΩÓèÄÔøΩ íuÔøΩxÔøΩÔøΩÔøΩW

//*****************************************************************************
// ÔøΩvÔøΩÔøΩÔøΩgÔøΩ^ÔøΩCÔøΩvÔøΩÈåæ
//*****************************************************************************
HRESULT MakeVertexScore(LPDIRECT3DDEVICE9 pDevice);
void SetTextureScore(int idx, int number);

//*****************************************************************************
// ÔøΩOÔøΩÔøΩÔøΩ[ÔøΩoÔøΩÔøΩÔøΩœêÔøΩÔøΩÈåæ
//*****************************************************************************
LPDIRECT3DTEXTURE9		g_pD3DTextureScore[2] = {};		// ÔøΩeÔøΩNÔøΩXÔøΩ`ÔøΩÔøΩÔøΩ÷ÇÃÉ|ÔøΩCÔøΩÔøΩÔøΩ^
LPDIRECT3DVERTEXBUFFER9 g_pD3DVtxBuffScore = NULL;		// ÔøΩÔøΩÔøΩ_ÔøΩoÔøΩbÔøΩtÔøΩ@ÔøΩCÔøΩÔøΩÔøΩ^ÔøΩ[ÔøΩtÔøΩFÔøΩ[ÔøΩXÔøΩ÷ÇÃÉ|ÔøΩCÔøΩÔøΩÔøΩ^

D3DXVECTOR3				g_posScore;						// ÔøΩ íu
D3DXVECTOR3				g_rotScore;						// ÔøΩÔøΩÔøΩÔøΩ

int						g_score;						// ÔøΩXÔøΩRÔøΩA

//=============================================================================
// ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ
//=============================================================================
HRESULT InitScore(void)
{
	LPDIRECT3DDEVICE9 pDevice = GetDevice();

	g_posScore = D3DXVECTOR3(0.0f, 0.0f, 0.0f);
	g_rotScore = D3DXVECTOR3(0.0f, 0.0f, 0.0f);

	// ÔøΩXÔøΩRÔøΩAÔøΩÃèÔøΩÔøΩÔøΩÔøΩÔøΩ
	g_score = 0;

	// ÔøΩÔøΩÔøΩ_ÔøΩÔøΩÔøΩÃçÏê¨
	MakeVertexScore(pDevice);

	// ÔøΩeÔøΩNÔøΩXÔøΩ`ÔøΩÔøΩÔøΩÃì«Ç›çÔøΩÔøΩÔøΩ
	D3DXCreateTextureFromFile(pDevice,					// ÔøΩfÔøΩoÔøΩCÔøΩXÔøΩ÷ÇÃÉ|ÔøΩCÔøΩÔøΩÔøΩ^
		TEXTURE_SCORE,			// ÔøΩtÔøΩ@ÔøΩCÔøΩÔøΩÔøΩÃñÔøΩÔøΩO
		&g_pD3DTextureScore[0]);	// ÔøΩ«Ç›çÔøΩÔøΩﬁÉÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ[

	D3DXCreateTextureFromFile(pDevice,					// ÔøΩfÔøΩoÔøΩCÔøΩXÔøΩ÷ÇÃÉ|ÔøΩCÔøΩÔøΩÔøΩ^
		TEXTURE_FRAME_SCORE,		// ÔøΩtÔøΩ@ÔøΩCÔøΩÔøΩÔøΩÃñÔøΩÔøΩO
		&g_pD3DTextureScore[1]);	// ÔøΩ«Ç›çÔøΩÔøΩﬁÉÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ[

	return S_OK;
}

//=============================================================================
// ÔøΩIÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ
//=============================================================================
void UninitScore(void)
{
	if (g_pD3DTextureScore[0] != NULL)
	{// ÔøΩeÔøΩNÔøΩXÔøΩ`ÔøΩÔøΩÔøΩÃäJÔøΩÔøΩ
		g_pD3DTextureScore[0]->Release();
		g_pD3DTextureScore[0] = NULL;
	}
	if (g_pD3DTextureScore[1] != NULL)
	{// ÔøΩeÔøΩNÔøΩXÔøΩ`ÔøΩÔøΩÔøΩÃäJÔøΩÔøΩ
		g_pD3DTextureScore[1]->Release();
		g_pD3DTextureScore[1] = NULL;
	}

	if (g_pD3DVtxBuffScore != NULL)
	{// ÔøΩÔøΩÔøΩ_ÔøΩoÔøΩbÔøΩtÔøΩ@ÔøΩÃäJÔøΩÔøΩ
		g_pD3DVtxBuffScore->Release();
		g_pD3DVtxBuffScore = NULL;
	}
}

//=============================================================================
// ÔøΩXÔøΩVÔøΩÔøΩÔøΩÔøΩ
//=============================================================================
void UpdateScore(void)
{
	for (int nCntPlace = 0; nCntPlace < NUM_PLACE; nCntPlace++)
	{
		int number;

		number = (g_score % (int)(powf(10.0f, (float)(NUM_PLACE - nCntPlace)))) / (int)(powf(10.0f, (float)(NUM_PLACE - nCntPlace - 1)));
		SetTextureScore(nCntPlace, number);
	}
}

//=============================================================================
// ÔøΩ`ÔøΩÊèàÔøΩÔøΩ
//=============================================================================
void DrawScore(void)
{
	LPDIRECT3DDEVICE9 pDevice = GetDevice();

	// ÔøΩÔøΩÔøΩ_ÔøΩoÔøΩbÔøΩtÔøΩ@ÔøΩÔøΩÔøΩfÔøΩoÔøΩCÔøΩXÔøΩÃÉfÔøΩ[ÔøΩ^ÔøΩXÔøΩgÔøΩÔøΩÔøΩ[ÔøΩÔøΩÔøΩ…ÉoÔøΩCÔøΩÔøΩÔøΩh
	pDevice->SetStreamSource(0, g_pD3DVtxBuffScore, 0, sizeof(VERTEX_2D));

	// ÔøΩÔøΩÔøΩ_ÔøΩtÔøΩHÔøΩ[ÔøΩ}ÔøΩbÔøΩgÔøΩÃê›íÔøΩ
	pDevice->SetFVF(FVF_VERTEX_2D);

	// ÔøΩeÔøΩNÔøΩXÔøΩ`ÔøΩÔøΩÔøΩÃê›íÔøΩ
	pDevice->SetTexture(0, g_pD3DTextureScore[0]);

	// ÔøΩ|ÔøΩÔøΩÔøΩSÔøΩÔøΩÔøΩÃï`ÔøΩÔøΩ
	for (int nCntPlace = 0; nCntPlace < NUM_PLACE; nCntPlace++)
	{
		pDevice->DrawPrimitive(D3DPT_TRIANGLESTRIP, (nCntPlace * 4), NUM_POLYGON);
	}

	//// ÔøΩeÔøΩNÔøΩXÔøΩ`ÔøΩÔøΩÔøΩÃê›íÔøΩ
	//pDevice->SetTexture(0, g_pD3DTextureScore[1]);

	//// ÔøΩ|ÔøΩÔøΩÔøΩSÔøΩÔøΩÔøΩÃï`ÔøΩÔøΩ
	//pDevice->DrawPrimitive(D3DPT_TRIANGLESTRIP, (NUM_PLACE * 4), NUM_POLYGON);
}

//=============================================================================
// ÔøΩÔøΩÔøΩ_ÔøΩÃçÏê¨
//=============================================================================
HRESULT MakeVertexScore(LPDIRECT3DDEVICE9 pDevice)
{
	// ÔøΩIÔøΩuÔøΩWÔøΩFÔøΩNÔøΩgÔøΩÃíÔøΩÔøΩ_ÔøΩoÔøΩbÔøΩtÔøΩ@ÔøΩê∂êÔøΩ
	if (FAILED(pDevice->CreateVertexBuffer(sizeof(VERTEX_2D) * (NUM_VERTEX * NUM_PLACE + 4),	// ÔøΩÔøΩÔøΩ_ÔøΩfÔøΩ[ÔøΩ^ÔøΩpÔøΩ…ämÔøΩ€ÇÔøΩÔøΩÔøΩoÔøΩbÔøΩtÔøΩ@ÔøΩTÔøΩCÔøΩY(ÔøΩoÔøΩCÔøΩgÔøΩPÔøΩÔøΩ)
		D3DUSAGE_WRITEONLY,								// ÔøΩÔøΩÔøΩ_ÔøΩoÔøΩbÔøΩtÔøΩ@ÔøΩÃégÔøΩpÔøΩ@ÔøΩ@
		FVF_VERTEX_2D,									// ÔøΩgÔøΩpÔøΩÔøΩÔøΩÈí∏ÔøΩ_ÔøΩtÔøΩHÔøΩ[ÔøΩ}ÔøΩbÔøΩg
		D3DPOOL_MANAGED,								// ÔøΩÔøΩÔøΩ\ÔøΩ[ÔøΩXÔøΩÃÉoÔøΩbÔøΩtÔøΩ@ÔøΩÔøΩ€éÔøΩÔøΩÔøΩÔøΩÈÉÅÔøΩÔøΩÔøΩÔøΩÔøΩNÔøΩÔøΩÔøΩXÔøΩÔøΩÔøΩwÔøΩÔøΩ
		&g_pD3DVtxBuffScore,							// ÔøΩÔøΩÔøΩ_ÔøΩoÔøΩbÔøΩtÔøΩ@ÔøΩCÔøΩÔøΩÔøΩ^ÔøΩ[ÔøΩtÔøΩFÔøΩ[ÔøΩXÔøΩ÷ÇÃÉ|ÔøΩCÔøΩÔøΩÔøΩ^
		NULL)))											// NULLÔøΩ…ê›íÔøΩ
	{
		return E_FAIL;
	}

	{//ÔøΩÔøΩÔøΩ_ÔøΩoÔøΩbÔøΩtÔøΩ@ÔøΩÃíÔøΩÔøΩgÔøΩñÑÇﬂÇÔøΩ
		VERTEX_2D *pVtx;

		// ÔøΩÔøΩÔøΩ_ÔøΩfÔøΩ[ÔøΩ^ÔøΩÃîÕàÕÇÔøΩÔøΩÔøΩÔøΩbÔøΩNÔøΩÔøΩÔøΩAÔøΩÔøΩÔøΩ_ÔøΩoÔøΩbÔøΩtÔøΩ@ÔøΩ÷ÇÃÉ|ÔøΩCÔøΩÔøΩÔøΩ^ÔøΩÔøΩÔøΩÊìæ
		g_pD3DVtxBuffScore->Lock(0, 0, (void**)&pVtx, 0);

		for (int nCntPlace = 0; nCntPlace < NUM_PLACE; nCntPlace++, pVtx += 4)
		{
			// ÔøΩÔøΩÔøΩ_ÔøΩÔøΩÔøΩWÔøΩÃê›íÔøΩ
			pVtx[0].vtx = D3DXVECTOR3(SCORE_POS_X + nCntPlace * SCORE_SIZE_X + SCORE_INTERVAL_X, SCORE_POS_Y, 0.0f);
			pVtx[1].vtx = D3DXVECTOR3(SCORE_POS_X + nCntPlace * (SCORE_INTERVAL_X + SCORE_SIZE_X) + SCORE_SIZE_X, SCORE_POS_Y, 0.0f);
			pVtx[2].vtx = D3DXVECTOR3(SCORE_POS_X + nCntPlace * SCORE_SIZE_X + SCORE_INTERVAL_X, SCORE_POS_Y + SCORE_SIZE_Y, 0.0f);
			pVtx[3].vtx = D3DXVECTOR3(SCORE_POS_X + nCntPlace * (SCORE_INTERVAL_X + SCORE_SIZE_X) + SCORE_SIZE_X, SCORE_POS_Y + SCORE_SIZE_Y, 0.0f);

			// rhwÔøΩÃê›íÔøΩ
			pVtx[0].rhw =
				pVtx[1].rhw =
				pVtx[2].rhw =
				pVtx[3].rhw = 1.0f;

			// ÔøΩÔøΩÔøΩÀåÔøΩÔøΩÃê›íÔøΩ
			pVtx[0].diffuse = D3DXCOLOR(1.0f, 1.0f, 0.0f, 1.0f);
			pVtx[1].diffuse = D3DXCOLOR(1.0f, 1.0f, 0.0f, 1.0f);
			pVtx[2].diffuse = D3DXCOLOR(1.0f, 1.0f, 0.0f, 1.0f);
			pVtx[3].diffuse = D3DXCOLOR(1.0f, 1.0f, 0.0f, 1.0f);

			// ÔøΩeÔøΩNÔøΩXÔøΩ`ÔøΩÔøΩÔøΩÔøΩÔøΩWÔøΩÃê›íÔøΩ
			pVtx[0].tex = D3DXVECTOR2(0.0f, 0.0f);
			pVtx[1].tex = D3DXVECTOR2(0.1f, 0.0f);
			pVtx[2].tex = D3DXVECTOR2(0.0f, 1.0f);
			pVtx[3].tex = D3DXVECTOR2(0.1f, 1.0f);
		}

		{
			// ÔøΩÔøΩÔøΩ_ÔøΩÔøΩÔøΩWÔøΩÃê›íÔøΩ
			pVtx[0].vtx = D3DXVECTOR3(SCORE_POS_X - 15, SCORE_POS_Y - 25, 0.0f);
			pVtx[1].vtx = D3DXVECTOR3(SCORE_POS_X + (SCORE_INTERVAL_X + SCORE_SIZE_X) * NUM_PLACE + 15, SCORE_POS_Y - 25, 0.0f);
			pVtx[2].vtx = D3DXVECTOR3(SCORE_POS_X - 15, SCORE_POS_Y + 55, 0.0f);
			pVtx[3].vtx = D3DXVECTOR3(SCORE_POS_X + (SCORE_INTERVAL_X + SCORE_SIZE_X) * NUM_PLACE + 15, SCORE_POS_Y + 55, 0.0f);

			// rhwÔøΩÃê›íÔøΩ
			pVtx[0].rhw =
				pVtx[1].rhw =
				pVtx[2].rhw =
				pVtx[3].rhw = 1.0f;

			// ÔøΩÔøΩÔøΩÀåÔøΩÔøΩÃê›íÔøΩ
			pVtx[0].diffuse = D3DXCOLOR(0.0f, 1.0f, 0.0f, 1.0f);
			pVtx[1].diffuse = D3DXCOLOR(0.0f, 1.0f, 0.0f, 1.0f);
			pVtx[2].diffuse = D3DXCOLOR(0.0f, 1.0f, 0.0f, 1.0f);
			pVtx[3].diffuse = D3DXCOLOR(0.0f, 1.0f, 0.0f, 1.0f);

			// ÔøΩeÔøΩNÔøΩXÔøΩ`ÔøΩÔøΩÔøΩÔøΩÔøΩWÔøΩÃê›íÔøΩ
			pVtx[0].tex = D3DXVECTOR2(0.0f, 0.0f);
			pVtx[1].tex = D3DXVECTOR2(1.0f, 0.0f);
			pVtx[2].tex = D3DXVECTOR2(0.0f, 1.0f);
			pVtx[3].tex = D3DXVECTOR2(1.0f, 1.0f);
		}

		// ÔøΩÔøΩÔøΩ_ÔøΩfÔøΩ[ÔøΩ^ÔøΩÔøΩÔøΩAÔøΩÔøΩÔøΩÔøΩÔøΩbÔøΩNÔøΩÔøΩÔøΩÔøΩ
		g_pD3DVtxBuffScore->Unlock();
	}

	return S_OK;
}

//=============================================================================
// ÔøΩeÔøΩNÔøΩXÔøΩ`ÔøΩÔøΩÔøΩÔøΩÔøΩWÔøΩÃê›íÔøΩ
//=============================================================================
void SetTextureScore(int idx, int number)
{
	VERTEX_2D *pVtx;

	// ÔøΩÔøΩÔøΩ_ÔøΩfÔøΩ[ÔøΩ^ÔøΩÃîÕàÕÇÔøΩÔøΩÔøΩÔøΩbÔøΩNÔøΩÔøΩÔøΩAÔøΩÔøΩÔøΩ_ÔøΩoÔøΩbÔøΩtÔøΩ@ÔøΩ÷ÇÃÉ|ÔøΩCÔøΩÔøΩÔøΩ^ÔøΩÔøΩÔøΩÊìæ
	g_pD3DVtxBuffScore->Lock(0, 0, (void**)&pVtx, 0);

	pVtx += (idx * 4);

	// ÔøΩÔøΩÔøΩ_ÔøΩÔøΩÔøΩWÔøΩÃê›íÔøΩ
	pVtx[0].tex = D3DXVECTOR2(number * 0.1f, 0.0f);
	pVtx[1].tex = D3DXVECTOR2(number * 0.1f + 0.1f, 0.0f);
	pVtx[2].tex = D3DXVECTOR2(number * 0.1f, 1.0f);
	pVtx[3].tex = D3DXVECTOR2(number * 0.1f + 0.1f, 1.0f);

	// ÔøΩÔøΩÔøΩ_ÔøΩfÔøΩ[ÔøΩ^ÔøΩÔøΩÔøΩAÔøΩÔøΩÔøΩÔøΩÔøΩbÔøΩNÔøΩÔøΩÔøΩÔøΩ
	g_pD3DVtxBuffScore->Unlock();
}

//=============================================================================
// ÔøΩXÔøΩRÔøΩAÔøΩÃïœçX
//=============================================================================
void ChangeScore(int value)
{
	g_score += value;
	if (g_score < 0)
	{
		g_score = 0;
	}
	else if (g_score >= (int)(powf(10.0f, (float)(NUM_PLACE + 1))))
	{
		g_score = (int)(powf(10.0f, (float)(NUM_PLACE + 1))) - 1;
	}
}
